# See accompanying readme.txt

# a chain of containers, to minimize rebuilding as changes are made.
# Each container depends on previous as specified by "!Container foo"

containers:
  
  # basic OS with dev (compiling)
  baseOS:
    setup:
    # 18.04 LTS End of support 2023
    #- !Ubuntu bionic

    # 18.10
    # - !Ubuntu cosmic

    # 19.04 End of support Jan 2020
    # - !Ubuntu disco

    # 19.10 End of support July 2020
    # - !Ubuntu eoan

    # 20.04 LTS
    - !Ubuntu focal

    # 20.10
    # - !Ubuntu groovy


    # enable universe repository (where gimp lives)
    - !UbuntuUniverse
    # tools for dev (C compiler)
    - !Install [build-essential]
    


  # with gimp and gimp dev
  gimpdev:
    setup:
    - !Container baseOS

    # gimp is only a run-time requirement, but install it early
    - !Install [gimp]

    # install prereqs for building any gimp plugin
    # As documented in resynthesizer/readme.md
    - !Install [libgimp2.0-dev, libglib2.0-dev, automake, intltool]

    # Define HOME.
    # Without this, HOME is /root
    # Gimp tries to write ~/.local/share (Gnome standard location for user data)
    # Avoids error: "/root/.local/share: read-only file system"
    environ:
      HOME: /work/.home

  # with package gimp-plugin-registry
  thirdPartyPlugins:
    setup:
    - !Container gimpdev

    # Intall package of third party plugins (includes resynthesizer) packaged by distributor
    # See command listThirdParty; it installs .py to different place than build scripts
    - !Install [gimp-plugin-registry]

    # Define HOME.
    # Without this, HOME is /root
    # Gimp tries to write ~/.local/share (Gnome standard location for user data)
    # Avoids error: "/root/.local/share: read-only file system"
    environ:
      HOME: /work/.home


  # with built and installed resynthesizer plugin
  resynth:
    setup:
    - !Container gimpdev

    # Not used: this works, but doesn't keep the repository (with test images)
    # Clone repository into temp directory and execute build script
    #- !GitInstall
    #  url: git://github.com/bootchk/resynthesizer
    #  script: ./autogen.sh && ./configure && make && make install

    # Clone repository into the container
    # This works, but better to build the edited repository in the project directory
    #- !Git
    # url: git://github.com/bootchk/resynthesizer
    # path: /home/resynthesizer

    # Remake container when source changes
    - !Depends /work/resynthesizer

    # cd to repository and build it
    # Build script is a sequence of sh commands, "&&" means each depends on success of previous.
    # As documented in build instructions in resynthesizer/readme.md
    #- !Sh cd /work/resynthesizer && ./autogen.sh && ./configure && make && make install
    - !Sh cd /work/resynthesizer && ./autogen.sh && make && make install

    environ:
      HOME: /work/.home

    


  
  # with a python script that invokes resynthesizer engine plugin
  resynthtest:
    setup:
    - !Container resynth
    
    # install python in container
    # Python is not needed to build resynthesizer, but is needed at runtime to run some plugins
    # !!! Ubuntu requires package gimp-python.  Package "python" will install but is not sufficient.
    
    # This works through 19.04 but fails from 19.10 onward
    #- !Install [gimp-python]

    #
    #- !Sh |
    #    wget http://archive.ubuntu.com/ubuntu/pool/universe/p/pygtk/python-gtk2_2.24.0-6_amd64.deb
    #    wget http://archive.ubuntu.com/ubuntu/pool/universe/g/gimp/gimp-python_2.10.8-2_amd64.deb

    #   sudo apt install gimp gimp-plugin-registry gimp-gmic
    #    sudo apt install python python-cairo python-gobject-2

    #    sudo dpkg -i python-gtk2_2.24.0-6_amd64.deb
    #    sudo dpkg -i gimp-python_2.10.8-2_amd64.deb

    # Create file containing test program.
    # Language is python, calling pygimp (pdb object) functions
    # The test program only proves that the resynthesizer plugin is registered properly, not that it works.
    # Expect Python "TypeError: wrong number of parameters" and for gimp-console to hang ( you can Ctl-C it. )
    - !Text
      /home/resynthesizer/test.py: |
        from gimpfu import *
        # Use images from local resynthesizer repository clone
        # img = pdb.gimp_file_load("/home/resynthesizer/Test/in_images/brick.png", "/home/resynthesizer/Test/in_images/brick.png")
        # invoke resynthesizer plugin using its pdb registered name (but with improper parameters)
        pdb.plug_in_resynthesizer()
        pdb.gimp_quit(1)

    # Define HOME,
    # Without this HOME is /root
    # Gimp tries to write ~/.local/share (Gnome standard location for user data)
    # Avoids error: "/root/.local/share: read-only file system"
    environ:
      HOME: /work/.home
     
    




commands:
  testOS: !Command
    description: Test sanity of OS in container baseOS
    container: baseOS
    run: |
      which which

  gimpVersion: !Command
    description: Run gimp command line in gimpdev container
    container: gimpdev
    run: |
      gimp --version

  listResynth: !Command
    description: ls built and installed resynthesizer components in container resynth (test build process)
    container: resynth
    run: |
      # c executables
      ls -al /usr/lib/gimp/2.0/plug-ins/resy*
      # python scripts  (location unique to Ubuntu)
      ls -al /usr/local/lib/gimp/2.0/plug-ins

  listThirdParty: !Command
    description: ls installed resynthesizer components from distributor package "gimp-plugin-registry"
    container: thirdPartyPlugins
    run: |
      # c executables
      ls -al /usr/lib/gimp/2.0/plug-ins/resy*
      # python scripts  (location dictated by packaging)
      ls -al /usr/lib/gimp/2.0/plug-ins/*.py
      

  testResynth: !Command
    description: Test built resynthesizer plugin will start from gimp-console (but throws wrong parameters)
    container: resynthtest
    # invoke headless (no gui) gimp, using python interpreter, on a python script
    run: |
      gimp-console -idf --verbose --batch-interpreter python-fu-eval  -b - </home/resynthesizer/test.py

  # Note that resynthesizer installs to /usr/local/... so you must configure gimp preferences/folders/plugin
  # and restart (run this command again.)
  testGimp: !Command
    description: Test GIMP where built resynthesizer installed >vagga --use-env DISPLAY testGimp
    container: resynth
    run: |
      echo Listing installed plugins
      echo ls /usr/lib/gimp/2.0/plug-ins
      ls /usr/lib/gimp/2.0/plug-ins
      echo ls ~/.config/GIMP/2.10/plug-ins
      ls ~/.config/GIMP/2.10/plug-ins
      echo ls /usr/local/lib/gimp/2.0/plug-ins
      ls /usr/local/lib/gimp/2.0/plug-ins
      export G_MESSAGES_DEBUG=all
      # --verbose
      gimp 




